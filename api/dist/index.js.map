{"version":3,"sources":["../src/index.js"],"names":["app","server","createServer","use","exposedHeaders","corsHeaders","urlencoded","extended","json","db","config","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,oBAAK;AACXC,kBAAgB,iBAAOC;AADZ,CAAL,CAAR;;AAIAL,IAAIG,GAAJ,CAAQ,qBAAWG,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;AAGA;AACA;;AAEAP,IAAIG,GAAJ,CAAQ,qBAAWK,IAAX,EAAR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAa,UAACC,EAAD,EAAQ;AACnB;AACAT,MAAIG,GAAJ,CAAQ,0BAAW,EAAEO,wBAAF,EAAUD,MAAV,EAAX,CAAR;;AAEA;AACAT,MAAIG,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAAEO,wBAAF,EAAUD,MAAV,EAAJ,CAAhB;;AAEAT,MAAIC,MAAJ,CAAWU,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C,EAAmD,YAAM;AACvDC,YAAQC,GAAR,sBAA+BjB,IAAIC,MAAJ,CAAWiB,OAAX,GAAqBH,IAApD;AACD,GAFD;AAGD,CAVD;;kBAYef,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\n\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\n\nconst app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n  exposedHeaders: config.corsHeaders,\n}));\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n// app.use(bodyParser.urlencoded({ extended: false }));  \n// app.use(bodyParser.urlencoded({ extended: false }))\n\napp.use(bodyParser.json());\n// app.use(function (req, res) {\n//   res.setHeader('Content-Type', 'text/plain')\n//   res.write('you posted:\\n')\n//   res.end(JSON.stringify(req.body, null, 2))\n// })\n\n// app.use(bodyParser.urlencoded({\n//   extended: true\n// }));\n\n// connect to db\ninitializeDb((db) => {\n  // internal middleware\n  app.use(middleware({ config, db }));\n\n  // api router\n  app.use('/api', api({ config, db }));\n\n  app.server.listen(process.env.PORT || config.port, () => {\n    console.log(`Started on port ${app.server.address().port}`);\n  });\n});\n\nexport default app;\n"]}