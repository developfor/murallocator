{"version":3,"sources":["../../src/models/murals.js"],"names":["validateEmail","email","re","test","muralSchema","Schema","submitter_name","first","type","String","trim","last","submitter_email","required","validate","match","artist_name","location","Types","ObjectId","ref","mural_id","unique","title","description","image_id","created_at","Date","default","now","is_approved","Boolean","methods","updateMural","body","mapKeys","value","key","merge","Murals","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC3B,MAAIC,KAAK,+CAAT;AACA,SAAOA,GAAGC,IAAH,CAAQF,KAAR,CAAP;AACH,CAHD;;AAKA,IAAMG,cAAc,IAAI,mBAASC,MAAb,CAAoB;AACtCC,kBAAgB;AACdC,WAAO,EAAEC,MAAMC,MAAR,EAAgBC,MAAM,IAAtB,EADO;AAEdC,UAAM,EAAEH,MAAMC,MAAR,EAAgBC,MAAM,IAAtB;AAFQ,GADsB;AAKtCE,mBAAiB;AACfJ,UAAMC,MADS;AAEfC,UAAM,IAFS;AAGfG,cAAU,2BAHK;AAIfC,cAAU,CAACd,aAAD,EAAgB,mCAAhB,CAJK;AAKfe,WAAO,CAAC,+CAAD,EAAkD,mCAAlD;AALQ,GALqB;AAYtCC,eAAa,EAAER,MAAMC,MAAR,EAAgBC,MAAM,IAAtB,EAZyB;AAatCO,YAAU;AACRT,UAAM,mBAASH,MAAT,CAAgBa,KAAhB,CAAsBC,QADpB;AAERC,SAAK;AAFG,GAb4B;AAiBtCC,YAAU,EAAEb,MAAMC,MAAR,EAAgBI,UAAU,IAA1B,EAAgCS,QAAQ,IAAxC,EAjB4B;AAkBtCC,SAAO,EAAEf,MAAMC,MAAR,EAAgBC,MAAM,IAAtB,EAA4BG,UAAU,IAAtC,EAlB+B;AAmBtCW,eAAa,EAAEhB,MAAMC,MAAR,EAnByB;AAoBtCgB,YAAU,EAAEjB,MAAMC,MAAR,EAAgBI,UAAU,IAA1B,EApB4B;AAqBtCa,cAAY,EAAElB,MAAMmB,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EArB0B;AAsBtCC,eAAa,EAAEtB,MAAMuB,OAAR,EAAiBH,SAAS,KAA1B;AAtByB,CAApB,CAApB;;AAyBAxB,YAAY4B,OAAZ,CAAoBC,WAApB,GAAkC,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAAA;;AAC3D,mBAAEC,OAAF,CAAUD,IAAV,EAAgB,UAACE,KAAD,EAAQC,GAAR,EAAgB;AAC9B,QAAIA,QAAQ,IAAZ,EAAkB;AAChB,YAAKA,GAAL,IAAY,iBAAEC,KAAF,CAAQ,MAAKD,GAAL,CAAR,EAAmBD,KAAnB,CAAZ;AACD;AACF,GAJD;AAKA,SAAO,IAAP;AACD,CAPD;;AASA,IAAMG,SAAS,mBAASC,KAAT,CAAe,QAAf,EAAyBpC,WAAzB,CAAf;kBACemC,M","file":"murals.js","sourcesContent":["import mongoose from 'mongoose';\nimport _ from 'lodash';\n\nlet validateEmail = (email) => {\n    var re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return re.test(email)\n};\n\nconst muralSchema = new mongoose.Schema({\n  submitter_name: {\n    first: { type: String, trim: true },\n    last: { type: String, trim: true },\n  },\n  submitter_email: {\n    type: String,\n    trim: true,\n    required: 'Email address is required',\n    validate: [validateEmail, 'Please fill a valid email address'],\n    match: [/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/, 'Please fill a valid email address']\n  },\n  artist_name: { type: String, trim: true },\n  location: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Locations',\n  },\n  mural_id: { type: String, required: true, unique: true },\n  title: { type: String, trim: true, required: true },\n  description: { type: String },\n  image_id: { type: String, required: true },\n  created_at: { type: Date, default: Date.now },\n  is_approved: { type: Boolean, default: false },\n});\n\nmuralSchema.methods.updateMural = function updateMural(body) {\n  _.mapKeys(body, (value, key) => {\n    if (key !== 'id') {\n      this[key] = _.merge(this[key], value);\n    }\n  });\n  return this;\n};\n\nconst Murals = mongoose.model('Murals', muralSchema);\nexport default Murals;\n"]}